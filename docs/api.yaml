openapi: 3.0.0
info:
  title: BookPilot API
  description: API для приложения BookPilot, которое трансформирует чтение книг в структурированное обучение
  version: 1.0.0
servers:
  - url: http://localhost:8000/api/v1
    description: Локальный сервер разработки
  - url: https://your-backend-url.railway.app/api/v1
    description: Продакшн сервер

tags:
  - name: auth
    description: Операции аутентификации
  - name: books
    description: Операции с книгами
  - name: guides
    description: Операции с учебными руководствами
  - name: chat
    description: Операции с чатом

paths:
  /auth/register:
    post:
      tags:
        - auth
      summary: Регистрация нового пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
              required:
                - email
      responses:
        '201':
          description: Пользователь успешно зарегистрирован
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user_id:
                    type: string
                    format: uuid
        '400':
          description: Неверный запрос
        '409':
          description: Пользователь с таким email уже существует

  /auth/login:
    post:
      tags:
        - auth
      summary: Вход пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
              required:
                - email
      responses:
        '200':
          description: Успешный вход
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
        '401':
          description: Неверные учетные данные

  /books:
    get:
      tags:
        - books
      summary: Получить список книг пользователя
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Список книг
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
        '401':
          description: Не авторизован
    post:
      tags:
        - books
      summary: Загрузить новую книгу
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                author:
                  type: string
                file:
                  type: string
                  format: binary
              required:
                - title
                - file
      responses:
        '201':
          description: Книга успешно загружена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '400':
          description: Неверный запрос
        '401':
          description: Не авторизован

  /books/{book_id}:
    get:
      tags:
        - books
      summary: Получить информацию о книге
      security:
        - bearerAuth: []
      parameters:
        - name: book_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Информация о книге
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '401':
          description: Не авторизован
        '404':
          description: Книга не найдена

  /guides/{book_id}:
    get:
      tags:
        - guides
      summary: Получить учебное руководство для книги
      security:
        - bearerAuth: []
      parameters:
        - name: book_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Учебное руководство
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Guide'
        '401':
          description: Не авторизован
        '404':
          description: Руководство не найдено

  /guides/{book_id}/progress:
    put:
      tags:
        - guides
      summary: Обновить прогресс изучения руководства
      security:
        - bearerAuth: []
      parameters:
        - name: book_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                completed_chapters:
                  type: array
                  items:
                    type: integer
                quiz_results:
                  type: object
                  additionalProperties:
                    type: integer
      responses:
        '200':
          description: Прогресс успешно обновлен
        '401':
          description: Не авторизован
        '404':
          description: Руководство не найдено

  /guides/{book_id}/export:
    get:
      tags:
        - guides
      summary: Экспортировать учебное руководство
      security:
        - bearerAuth: []
      parameters:
        - name: book_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: format
          in: query
          required: true
          schema:
            type: string
            enum: [pdf]
      responses:
        '200':
          description: Файл руководства
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '401':
          description: Не авторизован
        '404':
          description: Руководство не найдено

  /chat/{book_id}/messages:
    get:
      tags:
        - chat
      summary: Получить историю сообщений чата для книги
      security:
        - bearerAuth: []
      parameters:
        - name: book_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: История сообщений
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '401':
          description: Не авторизован
        '404':
          description: Книга не найдена
    post:
      tags:
        - chat
      summary: Отправить сообщение в чат
      security:
        - bearerAuth: []
      parameters:
        - name: book_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  enum: [user]
                content:
                  type: string
              required:
                - role
                - content
      responses:
        '201':
          description: Сообщение отправлено и получен ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '401':
          description: Не авторизован
        '404':
          description: Книга не найдена

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Book:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        author:
          type: string
        status:
          type: string
          enum: [uploaded, processing, processed, error]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Guide:
      type: object
      properties:
        id:
          type: string
          format: uuid
        book_id:
          type: string
          format: uuid
        json_content:
          type: object
          properties:
            title:
              type: string
            author:
              type: string
            toc:
              type: array
              items:
                type: string
            chapters:
              type: array
              items:
                type: object
                properties:
                  title:
                    type: string
                  summary:
                    type: string
                  questions:
                    type: array
                    items:
                      type: string
                  task:
                    type: string
            synthesis:
              type: object
              properties:
                key_takeaways:
                  type: array
                  items:
                    type: string
                action_plan:
                  type: string
            quiz:
              type: array
              items:
                type: object
                properties:
                  question:
                    type: string
                  options:
                    type: array
                    items:
                      type: string
                  correct_answer:
                    type: integer
        progress:
          type: object
          properties:
            completed_chapters:
              type: array
              items:
                type: integer
            quiz_results:
              type: object
              additionalProperties:
                type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Message:
      type: object
      properties:
        id:
          type: string
          format: uuid
        book_id:
          type: string
          format: uuid
        role:
          type: string
          enum: [user, assistant]
        content:
          type: string
        timestamp:
          type: string
          format: date-time
